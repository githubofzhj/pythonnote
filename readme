1.python 导入文件和导入代码的路径不是一样的，导入文件相对位置是从代码所在目录，导入代码的相对位子是从项目根目录开始。
***shell和pycharm具有相同路径的方*****
把pycharm里面的workpath设置成项目跟目录即可 https://www.cnblogs.com/geoffreyone/p/10767801.html

2.python from A import B，A为文件名称，B为类 函数之类的

3.pytorch和tensorflow都可以直接再anaconda中安装cuda和cudnn，注意要匹配



pytorch：
1.tensor操作中的dim
两种：
第一种对tensor维度进行改变的（uusqueeze）：dim=0是tensor整体，dim每加1就进一个括号，dim=-1是对最后的数字进行操作。
第二种是对tensor内数据进行操作（transpose）:两维度举例：dim=0指从第一维度（行）看，dim=1指从第二维度（列）看。
tensor可以和list 一样按index访问

例如tensor：a=[[1,2,3],[4,5,6]]是一个2x3tensor。但是dim=0是对整个tensor这纬，dim=1是对[1,2,3] [4,5,6]这维，dim=2和dim=-1对数字，
1，2，3，4，5，6这维。
例如
a.unsqueeze(dim=2):[[[1],[2],[3]],[4],[5],[6]]]
a.unsqueeze(dim=0):[[[1,2,3],[4,5,6]]]
a.transpoese(0,1):[[1,4],[2,5],[3,6]]


2.repeat()对每一个维度乘以输入的元组的倍数

x2_lstm=x2_lstm.unsequeeze(dim=1)#b*1*l2*c
x2_lstm = x2_lstm.repeat(1, x1_max_len, 1, 1)  # b*l1*l2*c

强化学习：
Q-learning
希望得到一个Q(s,a),输入state，action，输出reward，但是我们不知道state×action->reward具体的关系，所以利用神经网络来拟合这个关系，
然后让得到的reward之和最大。
